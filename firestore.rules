rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      function isInOrg (orgId) {
        return request.auth.token.email in get(/databases/$(database)/documents/organisations/$(orgId)).data.members;
      }

      function isOrgAdmin (orgId) {
        return get(/databases/$(database)/documents/organisations/$(orgId)).data.roles[request.auth.token.email] == 'admin';
      }

      function hasAuth () {
        return request.auth.uid != null;
      }

      match /organisations/{orgId} {
        allow read: if isInOrg(orgId);
        allow update: if isOrgAdmin(orgId);
      }

      match /users/{email} {
        allow read: if hasAuth() && request.auth.token.email == email;
        allow write: if false;
      }

      match /songs/{songId} {
        allow read: if hasAuth();
        allow write: if hasAuth();
      }

      match /events/{eventId} {
        allow read: if true;
        allow write: if isOrgAdmin(request.resource.data.organisation);
      }
    }
  }
}
